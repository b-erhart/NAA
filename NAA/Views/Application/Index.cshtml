@model IEnumerable<NAA.Data.Models.Domain.Application>

@{
    ViewBag.Title = "Index";
}

@{bool Confirm = false; }
<h2>Index</h2>

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <p class="text-warning">
        @ViewBag.ErrorMessage
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Course)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Statement)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TeacherContact)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TeacherReference)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Offer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Firm)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Course)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Statement)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TeacherContact)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TeacherReference)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Offer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Firm)
            @if (item.Firm == true)
            {
                Confirm = true;
            }
        </td>
        <td>
            @if (!string.IsNullOrEmpty(item.Offer) && !item.Offer.Equals("R") && !item.Offer.Equals("P") && !Confirm)
            {
                @Html.ActionLink("Confirm", "ConfirmApplication", new { applicationId = item.ApplicationId })
            }
            else if (string.IsNullOrEmpty(item.Offer))
            {
                @Html.ActionLink("Delete", "DeleteApplication", new { applicationId = item.ApplicationId })
            }
        </td>
    </tr>
}

</table>
